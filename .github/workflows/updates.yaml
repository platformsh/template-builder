---
name: 'Updates'

on:
  push:
    branches:
      - 'pass-templates'

env:
    # Language-specific tools.
    POETRY_VERSION: "1.1.11"
    PYTHON_VERSION: "3.9"

jobs:
    # A. Get the list of templates that will be used in the update (all subdirectories in `templates/`).
    build:
        runs-on: ubuntu-latest
        name: 'Get templates list'
        outputs:
            templates: ${{ steps.getlist.outputs.templates }}
        steps: 
          - uses: actions/checkout@v2
          - name: Setup Python
            uses: actions/setup-python@v2
            with:
              python-version: ${{ env.PYTHON_VERSION }}
          - name: 'Get template list'
            id: getlist
            run: |
              TEMPLATES=$(python -c '
              import os
              import json
              dirs=os.listdir("{}/templates".format(os.getcwd()))
              dirs.remove("__init__.py")
              test = {"template": dirs}
              print(json.dumps(dirs))
              ')
              echo "::set-output name=templates::$TEMPLATES"

    # B. Run an update on all 
    updatea:
        needs: build
        runs-on: ubuntu-latest
        name: 'UpdateA'
        strategy:
            fail-fast: false
            matrix: 
                template: ${{fromJSON(needs.build.outputs.templates)}}
                exclude:
                  # Node.js
                  - template: 'nuxtjs'
                  - template: 'express'
                  - template: 'koa'
                  - template: 'strapi'
                  - template: 'gatsby'
                  - template: 'nodejs'
                  - template: 'probot'
                  - template: 'directus'
                  # Python
                  - template: 'django2'
                  - template: 'django3'
                  - template: 'python3'
                  - template: 'pyramid'
                  - template: 'python3-uwsgi'
                  - template: 'meilisearch'
                  - template: 'flask'
                  - template: 'wagtail'
                  - template: 'pelican'
                  # Go
                  - template: 'mattermost'
                  - template: 'golang'
                  - template: 'beego'
                  - template: 'gin'
                  # Java
                  - template: 'microprofile-wildfly'
                  - template: 'microprofile-openliberty'
                  - template: 'microprofile-helidon'
                  - template: 'microprofile-tomee'
                  - template: 'microprofile-kumuluzee'
                  - template: 'microprofile-thorntail'
                  - template: 'microprofile-payara'
                  - template: 'spring-kotlin'
                  - template: 'spring-boot-gradle-mysql'
                  - template: 'spring-boot-maven-mysql'
                  - template: 'spring-mvc-maven-mongodb'
                  - template: 'tomcat'
                  - template: 'jetty'
                  - template: 'jenkins'
                  - template: 'quarkus'
                  - template: 'xwiki'
                  - template: 'micronaut'
                  # Multi-apps
                  - template: 'gatsby-strapi'
                  - template: 'eleventy-strapi'
                  - template: 'gatsby-wordpress'
                  - template: 'elastic-apm'
                  - template: 'gatsby-drupal'
                  # Lisp
                  - template: 'lisp'
                  # .NET
                  - template: 'aspnet-core'

        steps: 
            # 0. Install tools and dependencies.
            - uses: actions/checkout@v2
            - name: Do something simple
              run: |
                  echo "${{ matrix.template }}" > templates.txt
            - uses: actions/upload-artifact@master
              with:
                name: my-artifact
                path: templates.txt
