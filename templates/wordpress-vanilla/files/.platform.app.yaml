# Complete list of all available properties: https://docs.platform.sh/create-apps/app-reference.html

# A unique name for the app. Must be lowercase alphanumeric characters. Changing the name destroys data associated
# with the app.
name: app

# The runtime the application uses.
# Complete list of available runtimes: https://docs.platform.sh/create-apps/app-reference.html#types
type: 'php:8.1'

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
# More information: https://docs.platform.sh/create-apps/app-reference.html#relationships
relationships:
    database: "db:mysql"

# The size of the persistent disk of the application (in MB). Minimum value is 128.
disk: 2048

# Mounts define directories that are writable after the build is complete. If set as a local source, disk property is required.
# More information: https://docs.platform.sh/create-apps/app-reference.html#mounts
mounts:
    "wordpress/wp-content/cache":
        source: local
        source_path: "cache"
    "wordpress/wp-content/uploads":
        source: local
        source_path: "uploads"

# The web key configures the web server running in front of your app.
# More information: https://docs.platform.sh/create-apps/app-reference.html#web
web:
    # Each key in locations is a path on your site with a leading /.
    # More information: https://docs.platform.sh/create-apps/app-reference.html#locations
    locations:
        "/":
            # The public directory of the app, relative to its root.
            root: "wordpress"
            # The front-controller script to send non-static requests to.
            passthru: "/index.php"
            # Wordpress has multiple roots (wp-admin) so the following is required
            index:
                - "index.php"
            # The number of seconds whitelisted (static) content should be cached.
            expires: 600
            scripts: true
            allow: true
            # The key of each item in rules is a regular expression to match paths exactly. If an incoming request
            # matches the rule, it’s handled by the properties under the rule, overriding any conflicting rules from the
            # rest of the locations properties.
            # More information: https://docs.platform.sh/create-apps/app-reference.html#rules
            rules:
                ^/composer\.json:
                    allow: false
                ^/license\.txt$:
                    allow: false
                ^/readme\.html$:
                    allow: false
        "/wp-content/cache":
            root: "wordpress/wp-content/cache"
            scripts: false
            allow: false
        "/wp-content/uploads":
            root: "wordpress/wp-content/uploads"
            scripts: false
            allow: false
            rules:
                # Allow access to common static files.
                '(?<!\-lock)\.(?i:jpe?g|gif|png|svg|bmp|ico|css|js(?:on)?|eot|ttf|woff|woff2|pdf|docx?|xlsx?|pp[st]x?|psd|odt|key|mp[2-5g]|m4[av]|og[gv]|wav|mov|wm[av]|avi|3g[p2])$':
                    allow: true
                    expires: 1w

# Platform.sh provides a number of ways to set variables. Variables set in your app configuration have the lowest
# precedence, meaning they’re overridden by any conflicting values provided elsewhere.
# More information: https://docs.platform.sh/create-apps/app-reference.html#variables
variables:
    # PHP specific variables: https://docs.platform.sh/development/variables.html#php-specific-variables
    php:
        session.gc_maxlifetime: '200000'
        session.cookie_lifetime: '2000000'
        pcre.backtrack_limit: '200000'
        pcre.recursion_limit: '200000'

# Installs global dependencies as part of the build process. They’re independent of your app’s dependencies and
# are available in the PATH during the build process and in the runtime environment. They’re installed before
# the build hook runs using a package manager for the language.
# More information: https://docs.platform.sh/create-apps/app-reference.html#dependencies
dependencies:
    php:
        wp-cli/wp-cli-bundle: "^2.4"
        psy/psysh: "^0.10.4"

# Hooks allow you to customize your code/environment as the project moves through the build and deploy stages
# More info:
hooks:
    # The build hook is run after any build flavor.
    # More information: https://docs.platform.sh/create-apps/hooks/hooks-comparison.html#build-hook
    build: |
        set -e

    # The deploy hook is run after the app container has been started, but before it has started accepting requests.
    # More information: https://docs.platform.sh/create-apps/hooks/hooks-comparison.html#deploy-hook
    deploy: |
        # Flushes the object cache which might have changed between current production and newly deployed changes
        wp cache flush
        # Runs the WordPress database update procedure in case core is being updated with the newly deployed changes
        wp core update-db
        # Runs all cron events that are due now and may have come due during the build+deploy procedure
        wp cron event run --due-now

########################################################################################################################
##                                                                                                                    ##
## This source operation is part of the Platform.sh process of updating and maintaining our collection of templates.  ##
## For more information see https://docs.platform.sh/create-apps/source-operations.html and                           ##
## https://github.com/platformsh/source-operations                                                                    ##
##                                                                                                                    ##
##                  YOU CAN SAFELY DELETE THIS COMMENT AND THE LINES BENEATH IT                                       ##
##                                                                                                                    ##
########################################################################################################################
source:
    operations:
        auto-update:
            command: |
                # get our pub directory as defined in the application
                pubDir=$(echo $PLATFORM_APPLICATION | base64 --decode | jq -r '.web.locations."/".root')
                # grab the latest version of WordPress, save locally based on pubDir name
                curl https://wordpress.org/latest -o "${PLATFORM_CACHE_DIR}/${pubDir}.tar.gz"
                cd "${PLATFORM_CACHE_DIR}"
                tar -xvf "${pubDir}.tar.gz" && rm "${pubDir}.tar.gz"
                # the archive always expands into a "wordpress" directory
                rsync -av wordpress/ "${PLATFORM_SOURCE_DIR}/${pubDir}"
                cd "${PLATFORM_SOURCE_DIR}"
                git add --all
                confirm=$(git status --porcelain=1);
                if [ -z "${confirm}" ]; then
                    echo "No changes to commit."
                else
                    git commit -m "Auto updated via source operations"
                fi
